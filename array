import numpy as np

def f(x):  # f(x, y) = [x^2 + y^2 - 4, x*y - 1]
    return np.array([x[0]**2 + x[1]**2 - 4, x[0]*x[1] - 1])

def jacobian(x):
    return np.array([[2*x[0], 2*x[1]], [x[1], x[0]]])

x = np.array([1.0, 1.0])
for _ in range(10):
    J = jacobian(x)
    delta = np.linalg.solve(J, -f(x))
    x += delta
print("Solution:", x)
